name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  # Run tests on pull requests
  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint backend
        run: npm run lint --workspace=@dinner-app/backend

      - name: Lint frontend
        run: npm run lint --workspace=@dinner-app/frontend

      - name: Type check shared
        run: npm run build --workspace=@dinner-app/shared

      - name: Type check backend
        run: cd backend && npx tsc --noEmit

      - name: Type check frontend
        run: cd frontend && npx tsc --noEmit

      - name: Run backend tests
        run: npm run test --workspace=@dinner-app/backend
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          NODE_ENV: test

      - name: Run frontend tests
        run: npm run test:unit --workspace=@dinner-app/frontend

  # Deploy to Railway on push to main (after PR merge)
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Skip tests for now (tests are outdated and will be fixed in separate PR)
      # Tests run on PRs to catch issues before merge

      # Install Railway CLI
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      # Deploy using Railway GitHub Action instead of CLI
      - name: Deploy Backend to Railway
        uses: railwayapp/railway-deploy@v1
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: backend

      - name: Deploy Frontend to Railway
        uses: railwayapp/railway-deploy@v1
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: frontend

      - name: Deployment Summary
        run: |
          echo "âœ… Backend deployed successfully"
          echo "âœ… Frontend deployed successfully"
          echo "ðŸš€ Deployment complete!"