{"version":3,"file":"JoinSessionPage-DjRCUfTj.js","sources":["../../src/pages/JoinSessionPage.tsx"],"sourcesContent":["// Join Session page - Join an existing session via code\n// Based on: specs/001-dinner-decider-enables/tasks.md T053\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { joinSession } from '../services/socketService';\nimport { useSessionStore } from '../stores/sessionStore';\n\nexport default function JoinSessionPage() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [sessionCode, setSessionCode] = useState('');\n  const [participantName, setParticipantName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { setSessionCode: storeSessionCode, isConnected } = useSessionStore();\n\n  // Pre-fill session code if provided in URL query params\n  useEffect(() => {\n    const codeParam = searchParams.get('code');\n    if (codeParam) {\n      setSessionCode(codeParam.toUpperCase());\n    }\n  }, [searchParams]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    // Validate inputs\n    if (sessionCode.trim().length !== 6) {\n      setError('Session code must be 6 characters');\n      return;\n    }\n\n    if (participantName.trim().length < 1 || participantName.trim().length > 50) {\n      setError('Name must be between 1 and 50 characters');\n      return;\n    }\n\n    if (!isConnected) {\n      setError('Not connected to server. Please refresh the page.');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const code = sessionCode.trim().toUpperCase();\n      await joinSession(code, participantName.trim());\n\n      // Store session code\n      storeSessionCode(code);\n\n      // Navigate to session lobby\n      navigate(`/session/${code}`);\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to join session';\n\n      // Handle specific error cases\n      if (errorMessage.includes('full')) {\n        setError('This session is full (maximum 4 participants)');\n      } else if (errorMessage.includes('not found')) {\n        setError('Session not found or has expired');\n      } else {\n        setError(errorMessage);\n      }\n\n      setIsLoading(false);\n    }\n  };\n\n  const handleSessionCodeChange = (value: string) => {\n    // Only allow alphanumeric uppercase, max 6 chars\n    const cleaned = value.toUpperCase().replace(/[^A-Z0-9]/g, '').slice(0, 6);\n    setSessionCode(cleaned);\n  };\n\n  return (\n    <main className=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 px-4\">\n      <div className=\"w-full max-w-md\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Join Session\n          </h1>\n          <p className=\"text-gray-600\">\n            Enter the session code shared by your host\n          </p>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow-lg p-6 space-y-6\">\n          {/* Session Code */}\n          <div>\n            <label htmlFor=\"sessionCode\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Session Code\n            </label>\n            <input\n              id=\"sessionCode\"\n              name=\"sessionCode\"\n              type=\"text\"\n              value={sessionCode}\n              onChange={(e) => handleSessionCodeChange(e.target.value)}\n              placeholder=\"ABC123\"\n              maxLength={6}\n              className=\"w-full min-h-[44px] px-4 py-3 text-base text-center font-mono text-xl tracking-widest border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all uppercase\"\n              autoFocus={!searchParams.get('code')}\n              disabled={isLoading}\n            />\n            <p className=\"mt-1 text-xs text-gray-500\">\n              6-character code (letters and numbers)\n            </p>\n          </div>\n\n          {/* Participant Name */}\n          <div>\n            <label htmlFor=\"participantName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Your Name\n            </label>\n            <input\n              id=\"participantName\"\n              name=\"displayName\"\n              type=\"text\"\n              value={participantName}\n              onChange={(e) => setParticipantName(e.target.value)}\n              placeholder=\"Enter your name\"\n              maxLength={50}\n              className=\"w-full min-h-[44px] px-4 py-3 text-base border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all\"\n              disabled={isLoading}\n            />\n            <p className=\"mt-1 text-xs text-gray-500\">\n              {participantName.length}/50 characters\n            </p>\n          </div>\n\n          {/* Connection status */}\n          {!isConnected && (\n            <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n              <p className=\"text-sm text-yellow-700\">⚠️ Connecting to server...</p>\n            </div>\n          )}\n\n          {/* Error message */}\n          {error && (\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-sm text-red-600\">{error}</p>\n            </div>\n          )}\n\n          {/* Buttons */}\n          <div className=\"space-y-3\">\n            <button\n              type=\"submit\"\n              disabled={isLoading || !sessionCode.trim() || !participantName.trim() || !isConnected}\n              className=\"w-full min-h-[44px] px-6 py-3 text-lg font-semibold text-white bg-blue-600 rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed active:scale-[0.98] transition-all shadow-lg\"\n            >\n              {isLoading ? 'Joining...' : 'Join Session'}\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => navigate('/')}\n              disabled={isLoading}\n              className=\"w-full min-h-[44px] px-6 py-3 text-base font-medium text-gray-700 bg-white rounded-lg hover:bg-gray-50 active:scale-[0.98] transition-all border-2 border-gray-300\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </main>\n  );\n}"],"names":["JoinSessionPage","navigate","useNavigate","searchParams","useSearchParams","sessionCode","setSessionCode","useState","participantName","setParticipantName","isLoading","setIsLoading","error","setError","storeSessionCode","isConnected","useSessionStore","useEffect","codeParam","handleSubmit","e","code","joinSession","err","errorMessage","handleSessionCodeChange","value","cleaned","jsxs","jsx"],"mappings":"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"}