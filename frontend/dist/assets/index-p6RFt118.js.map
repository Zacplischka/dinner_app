{"version":3,"mappings":";;;;;;;;;GASa,IAAIA,EAAEC,EAAiBC,EAAE,OAAO,IAAI,eAAe,EAAEC,EAAE,OAAO,IAAI,gBAAgB,EAAEC,EAAE,OAAO,UAAU,eAAeC,EAAEL,EAAE,mDAAmD,kBAAkBM,EAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,EAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,EAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,aAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,EAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,EAAE,OAAO,CAAC,YAAkBF,EAAEY,EAAA,IAAYR,EAAEQ,EAAA,KAAaR,ECPxWS,EAAA,QAAiBf,uBCDfG,EAAIH,EAENgB,EAAA,WAAqBb,EAAE,WACvBa,EAAA,YAAsBb,EAAE,yrCCKpBc,MAAyC,IACzCC,EAA6BC,GAAS,CAC1C,MAAMC,EAAMH,EAAmB,IAAIE,CAAI,EACvC,OAAKC,EACE,OAAO,YACZ,OAAO,QAAQA,EAAI,MAAM,EAAE,IAAI,CAAC,CAACC,EAAKC,CAAI,IAAM,CAACD,EAAKC,EAAK,UAAU,CAAC,GAFvD,EAInB,EACMC,GAA+B,CAACC,EAAOC,EAAoBC,IAAY,CAC3E,GAAIF,IAAU,OACZ,MAAO,CACL,KAAM,YACN,WAAYC,EAAmB,QAAQC,CAAO,GAGlD,MAAMC,EAAqBV,EAAmB,IAAIS,EAAQ,IAAI,EAC9D,GAAIC,EACF,MAAO,CAAE,KAAM,UAAW,MAAAH,EAAO,GAAGG,CAAA,EAEtC,MAAMC,EAAgB,CACpB,WAAYH,EAAmB,QAAQC,CAAO,EAC9C,OAAQ,EAAC,EAEX,OAAAT,EAAmB,IAAIS,EAAQ,KAAME,CAAa,EAC3C,CAAE,KAAM,UAAW,MAAAJ,EAAO,GAAGI,CAAA,CACtC,EACMC,GAAe,CAACC,EAAIC,EAAkB,KAAO,CAACC,EAAKC,EAAKb,IAAQ,CACpE,KAAM,CAAE,QAAAc,EAAS,oBAAAC,EAAqB,MAAAX,EAAO,GAAGE,GAAYK,EAC5D,IAAIN,EACJ,GAAI,CACFA,GAAsBS,IAA6BE,EAAkB,aAAuB,UAAY,eAAiB,OAAO,4BAClI,MAAa,CACb,CACA,GAAI,CAACX,EACH,OAAKW,EAAkB,aAAuB,UAAY,cAAgBF,GACxE,QAAQ,KACN,gFAGGJ,EAAGE,EAAKC,EAAKb,CAAG,EAEzB,KAAM,CAAE,WAAAiB,EAAY,GAAGC,CAAA,EAA0Bf,GAA6BC,EAAOC,EAAoBC,CAAO,EAChH,IAAIa,EAAc,GAClBnB,EAAI,SAAW,CAACoB,EAAOC,EAASC,IAAiB,CAC/C,MAAMC,EAAIX,EAAIQ,EAAOC,CAAO,EAC5B,GAAI,CAACF,EAAa,OAAOI,EACzB,MAAMC,EAASF,IAAiB,OAAS,CAAE,KAAMP,GAAuB,aAAgB,OAAOO,GAAiB,SAAW,CAAE,KAAMA,GAAiBA,EACpJ,OAAIlB,IAAU,QACZa,GAAc,MAAgBA,EAAW,KAAKO,EAAQX,GAAK,EACpDU,IAETN,GAAc,MAAgBA,EAAW,KACvC,CACE,GAAGO,EACH,KAAM,GAAGpB,CAAK,IAAIoB,EAAO,IAAI,IAE/B,CACE,GAAG1B,EAA0BQ,EAAQ,IAAI,EACzC,CAACF,CAAK,EAAGJ,EAAI,UAAS,CACxB,EAEKuB,EACT,EACA,MAAME,EAAuB,IAAI,IAAM,CACrC,MAAMC,EAAsBP,EAC5BA,EAAc,GACdP,EAAI,GAAG,CAAC,EACRO,EAAcO,CAChB,EACMC,EAAejB,EAAGV,EAAI,SAAUa,EAAKb,CAAG,EAc9C,GAbIkB,EAAsB,OAAS,YACjCD,GAAc,MAAgBA,EAAW,KAAKU,CAAY,GAE1DT,EAAsB,OAAOA,EAAsB,KAAK,EAAIlB,EAC5DiB,GAAc,MAAgBA,EAAW,KACvC,OAAO,YACL,OAAO,QAAQC,EAAsB,MAAM,EAAE,IAAI,CAAC,CAACjB,EAAK2B,CAAM,IAAM,CAClE3B,EACAA,IAAQiB,EAAsB,MAAQS,EAAeC,EAAO,UAAS,CACtE,EACH,GAGA5B,EAAI,sBAAwB,OAAOA,EAAI,UAAa,WAAY,CAClE,IAAI6B,EAAiC,GACrC,MAAMC,EAAmB9B,EAAI,SAC7BA,EAAI,SAAW,IAAIZ,IAAM,EAClB4B,EAAkB,aAAuB,UAAY,cAAgB5B,EAAE,CAAC,EAAE,OAAS,cAAgB,CAACyC,IACvG,QAAQ,KACN,sHAEFA,EAAiC,IAEnCC,EAAiB,GAAG1C,CAAC,CACvB,CACF,CACA,OAAA6B,EAAW,UAAWc,GAAY,CAChC,IAAIC,EACJ,OAAQD,EAAQ,MACd,IAAK,SACH,GAAI,OAAOA,EAAQ,SAAY,SAAU,CACvC,QAAQ,MACN,2DAEF,MACF,CACA,OAAOE,EACLF,EAAQ,QACPP,GAAW,CACV,GAAIA,EAAO,OAAS,aAAc,CAChC,GAAIpB,IAAU,OAAQ,CACpBqB,EAAqBD,EAAO,KAAK,EACjC,MACF,CACI,OAAO,KAAKA,EAAO,KAAK,EAAE,SAAW,GACvC,QAAQ,MACN;AAAA;AAAA;AAAA;AAAA,uBAOJ,MAAMU,EAAoBV,EAAO,MAAMpB,CAAK,EAC5C,GAAoC8B,GAAsB,KACxD,OAEE,KAAK,UAAUlC,EAAI,UAAU,IAAM,KAAK,UAAUkC,CAAiB,GACrET,EAAqBS,CAAiB,EAExC,MACF,CACKlC,EAAI,sBACL,OAAOA,EAAI,UAAa,YAC5BA,EAAI,SAASwB,CAAM,CACrB,GAEJ,IAAK,WACH,OAAQO,EAAQ,QAAQ,MACtB,IAAK,QAEH,OADAN,EAAqBE,CAAY,EAC7BvB,IAAU,OACLa,GAAc,KAAO,OAASA,EAAW,KAAKjB,EAAI,UAAU,EAE9DiB,GAAc,KAAO,OAASA,EAAW,KAAKnB,EAA0BQ,EAAQ,IAAI,CAAC,EAC9F,IAAK,SACH,GAAIF,IAAU,OAAQ,CACpBa,GAAc,MAAgBA,EAAW,KAAKjB,EAAI,UAAU,EAC5D,MACF,CACA,OAAOiB,GAAc,KAAO,OAASA,EAAW,KAAKnB,EAA0BQ,EAAQ,IAAI,CAAC,EAC9F,IAAK,WACH,OAAO2B,EAAcF,EAAQ,MAAQX,GAAU,CAC7C,GAAIhB,IAAU,OAAQ,CACpBqB,EAAqBL,CAAK,EAC1BH,GAAc,MAAgBA,EAAW,KAAKjB,EAAI,UAAU,EAC5D,MACF,CACAyB,EAAqBL,EAAMhB,CAAK,CAAC,EACjCa,GAAc,MAAgBA,EAAW,KAAKnB,EAA0BQ,EAAQ,IAAI,CAAC,CACvF,CAAC,EACH,IAAK,gBACL,IAAK,iBACH,OAAO2B,EAAcF,EAAQ,MAAQX,GAAU,CAC7C,GAAIhB,IAAU,OAAQ,CACpBqB,EAAqBL,CAAK,EAC1B,MACF,CACI,KAAK,UAAUpB,EAAI,UAAU,IAAM,KAAK,UAAUoB,EAAMhB,CAAK,CAAC,GAChEqB,EAAqBL,EAAMhB,CAAK,CAAC,CAErC,CAAC,EACH,IAAK,eAAgB,CACnB,KAAM,CAAE,gBAAA+B,GAAoBJ,EAAQ,QAC9BK,GAAqBJ,EAAKG,EAAgB,eAAe,MAAM,EAAE,EAAE,CAAC,IAAM,KAAO,OAASH,EAAG,MACnG,GAAI,CAACI,EAAmB,OAEtBX,EADErB,IAAU,OACSgC,EAEAA,EAAkBhC,CAAK,CAFN,EAIxCa,GAAc,MAAgBA,EAAW,KACvC,KAEAkB,CAAA,EAEF,MACF,CACA,IAAK,kBACH,OAAOhB,EAAc,CAACA,CAAA,CAE1B,OAEN,CAAC,EACMQ,CACT,EACMU,GAAW5B,GACXwB,EAAgB,CAACK,EAAa3D,IAAM,CACxC,IAAI4D,EACJ,GAAI,CACFA,EAAS,KAAK,MAAMD,CAAW,CACjC,OAAS9C,EAAG,CACV,QAAQ,MACN,kEACAA,CAAA,CAEJ,CACI+C,IAAW,QAAQ5D,EAAE4D,CAAM,CACjC,EA6BA,SAASC,GAAkBC,EAAYnC,EAAS,CAC9C,IAAIoC,EACJ,GAAI,CACFA,EAAUD,EAAA,CACZ,MAAa,CACX,MACF,CAsBA,MArBuB,CACrB,QAAU1C,GAAS,CACjB,IAAIiC,EACJ,MAAMW,EAASC,GACTA,IAAS,KACJ,KAEF,KAAK,MAAMA,EAAwB,MAAwB,EAE9DC,GAAOb,EAAKU,EAAQ,QAAQ3C,CAAI,IAAM,KAAOiC,EAAK,KACxD,OAAIa,aAAe,QACVA,EAAI,KAAKF,CAAK,EAEhBA,EAAME,CAAG,CAClB,EACA,QAAS,CAAC9C,EAAM+C,IAAaJ,EAAQ,QACnC3C,EACA,KAAK,UAAU+C,EAA4B,MAAyB,GAEtE,WAAa/C,GAAS2C,EAAQ,WAAW3C,CAAI,EAGjD,CACA,MAAMgD,EAAcrC,GAAQsC,GAAU,CACpC,GAAI,CACF,MAAMC,EAASvC,EAAGsC,CAAK,EACvB,OAAIC,aAAkB,QACbA,EAEF,CACL,KAAKC,EAAa,CAChB,OAAOH,EAAWG,CAAW,EAAED,CAAM,CACvC,EACA,MAAME,EAAa,CACjB,OAAO,IACT,EAEJ,OAAS3D,EAAG,CACV,MAAO,CACL,KAAK4D,EAAc,CACjB,OAAO,IACT,EACA,MAAMC,EAAY,CAChB,OAAON,EAAWM,CAAU,EAAE7D,CAAC,CACjC,EAEJ,CACF,EACM8D,GAAU,CAACC,EAAQC,IAAgB,CAAC5C,EAAKC,EAAKb,IAAQ,CAC1D,IAAIM,EAAU,CACZ,WAAY,IAAM,aAClB,UAAW,KAAK,UAChB,YAAa,KAAK,MAClB,WAAac,GAAUA,EACvB,QAAS,EACT,MAAO,CAACqC,EAAgBC,KAAkB,CACxC,GAAGA,EACH,GAAGD,CAAA,GAEL,GAAGD,CAAA,EAEDG,EAAc,GAClB,MAAMC,MAAyC,IACzCC,MAA+C,IACrD,IAAInB,EACJ,GAAI,CACFA,EAAUpC,EAAQ,YACpB,MAAa,CACb,CACA,GAAI,CAACoC,EACH,OAAOa,EACL,IAAIO,IAAS,CACX,QAAQ,KACN,uDAAuDxD,EAAQ,IAAI,kDAErEM,EAAI,GAAGkD,CAAI,CACb,EACAjD,EACAb,CAAA,EAGJ,MAAM+D,EAAoBhB,EAAWzC,EAAQ,SAAS,EAChD0D,EAAU,IAAM,CACpB,MAAM5C,EAAQd,EAAQ,WAAW,CAAE,GAAGO,EAAA,EAAO,EAC7C,IAAIoD,EACJ,MAAMC,EAAWH,EAAkB,CAAE,MAAA3C,EAAO,QAASd,EAAQ,QAAS,EAAE,KACrE6D,GAAoBzB,EAAQ,QAAQpC,EAAQ,KAAM6D,CAAe,GAClE,MAAO3E,GAAM,CACbyE,EAAczE,CAChB,CAAC,EACD,GAAIyE,EACF,MAAMA,EAER,OAAOC,CACT,EACME,EAAgBpE,EAAI,SAC1BA,EAAI,SAAW,CAACoB,EAAOC,IAAY,CACjC+C,EAAchD,EAAOC,CAAO,EACvB2C,EAAA,CACP,EACA,MAAMK,EAAed,EACnB,IAAIO,IAAS,CACXlD,EAAI,GAAGkD,CAAI,EACNE,EAAA,CACP,EACAnD,EACAb,CAAA,EAEF,IAAIsE,EACJ,MAAMC,EAAU,IAAM,CACpB,IAAIvC,EACJ,GAAI,CAACU,EAAS,OACdiB,EAAc,GACdC,EAAmB,QAASY,GAAOA,EAAG3D,EAAA,CAAK,CAAC,EAC5C,MAAM4D,IAA4BzC,EAAK1B,EAAQ,qBAAuB,KAAO,OAAS0B,EAAG,KAAK1B,EAASO,EAAA,CAAK,IAAM,OAClH,OAAOkC,EAAWL,EAAQ,QAAQ,KAAKA,CAAO,CAAC,EAAEpC,EAAQ,IAAI,EAAE,KAAMoE,GAAiB,CACpF,GAAIA,EACF,OAAOpE,EAAQ,YAAYoE,CAAY,CAE3C,CAAC,EAAE,KAAMC,GAA6B,CACpC,GAAIA,EACF,GAAI,OAAOA,EAAyB,SAAY,UAAYA,EAAyB,UAAYrE,EAAQ,QAAS,CAChH,GAAIA,EAAQ,QACV,OAAOA,EAAQ,QACbqE,EAAyB,MACzBA,EAAyB,SAG7B,QAAQ,MACN,wFAEJ,KACE,QAAOA,EAAyB,KAGtC,CAAC,EAAE,KAAMC,GAAkB,CACzB,IAAIC,EACJ,OAAAP,EAAmBhE,EAAQ,MACzBsE,GACCC,EAAMhE,MAAU,KAAOgE,EAAMR,CAAA,EAEhCzD,EAAI0D,EAAkB,EAAI,EACnBN,EAAA,CACT,CAAC,EAAE,KAAK,IAAM,CACZS,GAA2B,MAAgBA,EAAwBH,EAAkB,MAAM,EAC3FX,EAAc,GACdE,EAAyB,QAASW,GAAOA,EAAGF,CAAgB,CAAC,CAC/D,CAAC,EAAE,MAAO9E,GAAM,CACdiF,GAA2B,MAAgBA,EAAwB,OAAQjF,CAAC,CAC9E,CAAC,CACH,EACA,OAAAQ,EAAI,QAAU,CACZ,WAAa8E,GAAe,CAC1BxE,EAAU,CACR,GAAGA,EACH,GAAGwE,CAAA,EAEDA,EAAW,aACbpC,EAAUoC,EAAW,aAEzB,EACA,aAAc,IAAM,CAClBpC,GAAW,MAAgBA,EAAQ,WAAWpC,EAAQ,IAAI,CAC5D,EACA,WAAY,IAAMA,EAClB,UAAW,IAAMiE,EAAA,EACjB,YAAa,IAAMZ,EACnB,UAAYa,IACVZ,EAAmB,IAAIY,CAAE,EAClB,IAAM,CACXZ,EAAmB,OAAOY,CAAE,CAC9B,GAEF,kBAAoBA,IAClBX,EAAyB,IAAIW,CAAE,EACxB,IAAM,CACXX,EAAyB,OAAOW,CAAE,CACpC,EACF,EAEFD,EAAA,EACOD,GAAoBD,CAC7B,EACMU,GAAU,CAACxB,EAAQC,IAAgB,CAAC5C,EAAKC,EAAKb,IAAQ,CAC1D,IAAIM,EAAU,CACZ,QAASkC,GAAkB,IAAM,YAAY,EAC7C,WAAapB,GAAUA,EACvB,QAAS,EACT,MAAO,CAACqC,EAAgBC,KAAkB,CACxC,GAAGA,EACH,GAAGD,CAAA,GAEL,GAAGD,CAAA,EAEDG,EAAc,GAClB,MAAMC,MAAyC,IACzCC,MAA+C,IACrD,IAAInB,EAAUpC,EAAQ,QACtB,GAAI,CAACoC,EACH,OAAOa,EACL,IAAIO,IAAS,CACX,QAAQ,KACN,uDAAuDxD,EAAQ,IAAI,kDAErEM,EAAI,GAAGkD,CAAI,CACb,EACAjD,EACAb,CAAA,EAGJ,MAAMgE,EAAU,IAAM,CACpB,MAAM5C,EAAQd,EAAQ,WAAW,CAAE,GAAGO,EAAA,EAAO,EAC7C,OAAO6B,EAAQ,QAAQpC,EAAQ,KAAM,CACnC,MAAAc,EACA,QAASd,EAAQ,QAClB,CACH,EACM8D,EAAgBpE,EAAI,SAC1BA,EAAI,SAAW,CAACoB,EAAOC,IAAY,CACjC+C,EAAchD,EAAOC,CAAO,EACvB2C,EAAA,CACP,EACA,MAAMK,EAAed,EACnB,IAAIO,IAAS,CACXlD,EAAI,GAAGkD,CAAI,EACNE,EAAA,CACP,EACAnD,EACAb,CAAA,EAEFA,EAAI,gBAAkB,IAAMqE,EAC5B,IAAIC,EACJ,MAAMC,EAAU,IAAM,CACpB,IAAIvC,EAAIgD,EACR,GAAI,CAACtC,EAAS,OACdiB,EAAc,GACdC,EAAmB,QAASY,GAAO,CACjC,IAAIK,EACJ,OAAOL,GAAIK,EAAMhE,EAAA,IAAU,KAAOgE,EAAMR,CAAY,CACtD,CAAC,EACD,MAAMI,IAA4BO,EAAK1E,EAAQ,qBAAuB,KAAO,OAAS0E,EAAG,KAAK1E,GAAU0B,EAAKnB,EAAA,IAAU,KAAOmB,EAAKqC,CAAY,IAAM,OACrJ,OAAOtB,EAAWL,EAAQ,QAAQ,KAAKA,CAAO,CAAC,EAAEpC,EAAQ,IAAI,EAAE,KAAMqE,GAA6B,CAChG,GAAIA,EACF,GAAI,OAAOA,EAAyB,SAAY,UAAYA,EAAyB,UAAYrE,EAAQ,QAAS,CAChH,GAAIA,EAAQ,QACV,MAAO,CACL,GACAA,EAAQ,QACNqE,EAAyB,MACzBA,EAAyB,QAC3B,EAGJ,QAAQ,MACN,wFAEJ,KACE,OAAO,CAAC,GAAOA,EAAyB,KAAK,EAGjD,MAAO,CAAC,GAAO,MAAM,CACvB,CAAC,EAAE,KAAMM,GAAoB,CAC3B,IAAIJ,EACJ,KAAM,CAACK,EAAUN,CAAa,EAAIK,EAMlC,GALAX,EAAmBhE,EAAQ,MACzBsE,GACCC,EAAMhE,MAAU,KAAOgE,EAAMR,CAAA,EAEhCzD,EAAI0D,EAAkB,EAAI,EACtBY,EACF,OAAOlB,EAAA,CAEX,CAAC,EAAE,KAAK,IAAM,CACZS,GAA2B,MAAgBA,EAAwBH,EAAkB,MAAM,EAC3FA,EAAmBzD,EAAA,EACnB8C,EAAc,GACdE,EAAyB,QAASW,GAAOA,EAAGF,CAAgB,CAAC,CAC/D,CAAC,EAAE,MAAO9E,GAAM,CACdiF,GAA2B,MAAgBA,EAAwB,OAAQjF,CAAC,CAC9E,CAAC,CACH,EACA,OAAAQ,EAAI,QAAU,CACZ,WAAa8E,GAAe,CAC1BxE,EAAU,CACR,GAAGA,EACH,GAAGwE,CAAA,EAEDA,EAAW,UACbpC,EAAUoC,EAAW,QAEzB,EACA,aAAc,IAAM,CAClBpC,GAAW,MAAgBA,EAAQ,WAAWpC,EAAQ,IAAI,CAC5D,EACA,WAAY,IAAMA,EAClB,UAAW,IAAMiE,EAAA,EACjB,YAAa,IAAMZ,EACnB,UAAYa,IACVZ,EAAmB,IAAIY,CAAE,EAClB,IAAM,CACXZ,EAAmB,OAAOY,CAAE,CAC9B,GAEF,kBAAoBA,IAClBX,EAAyB,IAAIW,CAAE,EACxB,IAAM,CACXX,EAAyB,OAAOW,CAAE,CACpC,EACF,EAEGlE,EAAQ,eACXiE,EAAA,EAEKD,GAAoBD,CAC7B,EACMc,GAAc,CAAC5B,EAAQC,IACvB,eAAgBA,GAAe,cAAeA,GAAe,gBAAiBA,IAC3ExC,EAAkB,aAAuB,UAAY,cACxD,QAAQ,KACN,kHAGGsC,GAAQC,EAAQC,CAAW,GAE7BuB,GAAQxB,EAAQC,CAAW,EAE9B4B,GAAUD,GCthBVxD,EAAe,CACnB,YAAa,KACb,aAAc,GACd,cAAe,KACf,WAAY,GACZ,cAAe,GACf,mBAAoB,GACpB,cAAe,UACf,YAAa,EACf,EAEa0D,EAAkBC,EAAA,EAC7BjD,GACE+C,GACGxE,IAAS,CACR,GAAGe,EAGH,eAAiB4D,GAAS3E,EAAI,CAAE,YAAa2E,EAAM,EAEnD,iBAAmBC,GAAW5E,EAAI,CAAE,cAAe4E,EAAQ,EAE3D,eAAiBC,GACf7E,EAAKQ,GAAU,CAEb,MAAMsE,EAAgBtE,EAAM,aAAa,UACtCnC,GAAMA,EAAE,gBAAkBwG,EAAY,eAGzC,GAAIC,GAAiB,EAAG,CACtB,MAAMC,EAAU,CAAC,GAAGvE,EAAM,YAAY,EACtC,OAAAuE,EAAQD,CAAa,EAAI,CAAE,GAAGC,EAAQD,CAAa,EAAG,GAAGD,CAAA,EAClD,CAAE,aAAcE,CAAA,CACzB,CAEA,MAAO,CAAE,aAAc,CAAC,GAAGvE,EAAM,aAAcqE,CAAW,EAC5D,CAAC,EAEH,kBAAoBG,GAClBhF,EAAKQ,IAAW,CACd,aAAcA,EAAM,aAAa,OAAQnC,GAAMA,EAAE,gBAAkB2G,CAAa,GAChF,EAEJ,mBAAqBC,GAAiBjF,EAAI,CAAE,aAAAiF,EAAc,EAE1D,8BAA+B,CAACD,EAAeE,IAC7ClF,EAAKQ,IAAW,CACd,aAAcA,EAAM,aAAa,IAAKnC,GACpCA,EAAE,gBAAkB2G,EAAgB,CAAE,GAAG3G,EAAG,SAAA6G,GAAa7G,CAAA,CAC3D,EACA,EAGJ,cAAgB8G,GAAcnF,EAAI,CAAE,WAAYmF,EAAW,EAE3D,gBAAkBC,GAChBpF,EAAKQ,IAEI,CACL,WAFiBA,EAAM,WAAW,SAAS4E,CAAQ,EAG/C5E,EAAM,WAAW,OAAQ6E,GAAOA,IAAOD,CAAQ,EAC/C,CAAC,GAAG5E,EAAM,WAAY4E,CAAQ,GAErC,EAGH,WAAaE,GACXtF,EAAI,CACF,cAAesF,EAAQ,cACvB,mBAAoBA,EAAQ,mBAC5B,cAAe,WAChB,EAGH,iBAAmBC,GAAWvF,EAAI,CAAE,cAAeuF,EAAQ,EAE3D,oBAAsBC,GAAgBxF,EAAI,CAAE,YAAAwF,EAAa,EAGzD,aAAc,IAAMxF,EAAIe,CAAY,EAEpC,gBAAiB,IACff,EAAI,CACF,WAAY,GACZ,cAAe,GACf,mBAAoB,GACpB,cAAe,YAChB,IAEL,CACE,KAAM,yBAGR,EAEF,CAAE,KAAM,gBAAgB,CAE5B,ECzHMyF,GAAc,iDAGpB,IAAIC,EAAoE,KAKjE,SAASC,IAAyB,CACvC,GAAID,GAAA,MAAAA,EAAQ,UAAW,CACrB,QAAQ,IAAI,0BAA0B,EACtC,MACF,CAEAA,EAASE,EAAGH,GAAa,CACvB,aAAc,GACd,qBAAsB,EACtB,kBAAmB,IACnB,qBAAsB,IACtB,QAAS,IACV,EAGDC,EAAO,GAAG,UAAW,IAAM,CACzB,MAAMG,EAAWH,GAAA,YAAAA,EAAQ,GACzB,QAAQ,IAAI,oBAAqBG,CAAQ,EACzCpB,EAAgB,WAAW,oBAAoB,EAAI,EAC/CoB,GACFpB,EAAgB,WAAW,iBAAiBoB,CAAQ,CAExD,CAAC,EAEDH,EAAO,GAAG,aAAeI,GAAW,CAClC,QAAQ,IAAI,uBAAwBA,CAAM,EAC1CrB,EAAgB,WAAW,oBAAoB,EAAK,CACtD,CAAC,EAEDiB,EAAO,GAAG,gBAAkBK,GAAU,CACpC,QAAQ,MAAM,2BAA4BA,CAAK,EAC/CtB,EAAgB,WAAW,oBAAoB,EAAK,CACtD,CAAC,EAGDuB,GAAA,CACF,CAKA,SAASA,IAA2B,CAC7BN,IAGLA,EAAO,GAAG,qBAAuBO,GAAkC,CACjE,QAAQ,IAAI,sBAAuBA,CAAK,EACxCxB,EAAgB,WAAW,eAAe,CACxC,cAAewB,EAAM,cACrB,YAAaA,EAAM,YACnB,YAAa,GACb,SAAU,KAAK,MACf,aAAc,GACd,OAAQ,GACR,SAAUA,EAAM,UAAY,GAC7B,CACH,CAAC,EAKDP,EAAO,GAAG,mBAAqBO,GAAgC,CAC7D,QAAQ,IAAI,oBAAqBA,CAAK,EAEtCxB,EACG,WACA,8BAA8BwB,EAAM,cAAeA,EAAM,UAAY,EAAK,CAC/E,CAAC,EAGDP,EAAO,GAAG,wBAA0BO,GAAqC,CACvE,QAAQ,IAAI,yBAA0BA,CAAK,EAE3C,MAAMzG,EAAQiF,EAAgB,WACxByB,EAAsB1G,EAAM,aAAa,IAAKnB,GAClDA,EAAE,gBAAkB4H,EAAM,cAAgB,CAAE,GAAG5H,EAAG,aAAc,IAASA,CAAA,EAE3EmB,EAAM,mBAAmB0G,CAAmB,CAC9C,CAAC,EAGDR,EAAO,GAAG,kBAAoBO,GAA+B,CAC3D,QAAQ,IAAI,mBAAoBA,CAAK,EACrCxB,EAAgB,WAAW,WAAW,CACpC,YAAawB,EAAM,YACnB,mBAAoBA,EAAM,mBAC1B,cAAeA,EAAM,cACrB,WAAYA,EAAM,WACnB,CACH,CAAC,EAGDP,EAAO,GAAG,oBAAsBO,GAAiC,CAC/D,QAAQ,IAAI,qBAAsBA,CAAK,EACvCxB,EAAgB,WAAW,iBAC7B,CAAC,EAGDiB,EAAO,GAAG,kBAAoBO,GAA+B,CAC3D,QAAQ,IAAI,mBAAoBA,CAAK,EACrCxB,EAAgB,WAAW,iBAAiB,SAAS,CACvD,CAAC,EAGDiB,EAAO,GAAG,QAAUO,GAAsB,CACxC,QAAQ,MAAM,gBAAiBA,CAAK,CAEtC,CAAC,EACH,CAKO,SAASE,GACdC,EACAC,EAC8B,CAC9B,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,GAAI,EAACb,GAAA,MAAAA,EAAQ,WAAW,CACtBa,EAAO,IAAI,MAAM,sBAAsB,CAAC,EACxC,MACF,CAEA,MAAMC,EAA8B,CAClC,YAAAJ,EACA,YAAAC,CAAA,EAGFX,EAAO,KAAK,eAAgBc,EAAUC,GAA6B,CAC7DA,EAAI,SAAWA,EAAI,cAErBhC,EAAgB,WAAW,eAAe2B,CAAW,EACrD3B,EAAgB,WAAW,mBAAmBgC,EAAI,aAAa,IAAIpI,IAAM,CACvE,GAAGA,EACH,YAAA+H,EACA,SAAU,KAAK,MACf,aAAc,GACd,SAAU/H,EAAE,UAAY,IACxB,CAAC,EACHiI,EAAQG,CAAG,GAEXF,EAAO,IAAI,MAAME,EAAI,OAAS,wBAAwB,CAAC,CAE3D,CAAC,CACH,CAAC,CACH,CAKO,SAASC,GACdN,EACAjB,EACkC,CAClC,OAAO,IAAI,QAAQ,CAACmB,EAASC,IAAW,CACtC,GAAI,EAACb,GAAA,MAAAA,EAAQ,WAAW,CACtBa,EAAO,IAAI,MAAM,sBAAsB,CAAC,EACxC,MACF,CAEA,MAAMC,EAAkC,CACtC,YAAAJ,EACA,WAAYjB,CAAA,EAGdO,EAAO,KAAK,mBAAoBc,EAAUC,GAAiC,CACrEA,EAAI,QACNH,EAAQG,CAAG,EAEXF,EAAO,IAAI,MAAME,EAAI,OAAS,4BAA4B,CAAC,CAE/D,CAAC,CACH,CAAC,CACH,CAKO,SAASE,GAAeP,EAAoC,CACjE,OAAO,IAAI,QAAQ,CAACE,EAASC,IAAW,CACtC,GAAI,EAACb,GAAA,MAAAA,EAAQ,WAAW,CACtBa,EAAO,IAAI,MAAM,sBAAsB,CAAC,EACxC,MACF,CAEA,MAAMC,EAAiC,CACrC,YAAAJ,CAAA,EAGFV,EAAO,KAAK,kBAAmBc,EAAUC,GAA+C,CAClFA,EAAI,QACNH,EAAA,EAEAC,EAAO,IAAI,MAAME,EAAI,OAAS,2BAA2B,CAAC,CAE9D,CAAC,CACH,CAAC,CACH,CC3NA,MAAMG,EAAWC,OAAK,UAAM,OAAO,wBAAkB,+BAAC,EAChDC,GAAoBD,OAAK,UAAM,OAAO,iCAA2B,iCAAC,EAClEE,GAAkBF,OAAK,UAAM,OAAO,+BAAyB,+BAAC,EAC9DG,GAAmBH,OAAK,UAAM,OAAO,gCAA0B,iCAAC,EAChEI,GAAgBJ,OAAK,UAAM,OAAO,6BAAuB,iCAAC,EAC1DK,GAAcL,OAAK,UAAM,OAAO,2BAAqB,gCAAC,EAG5D,SAASM,IAAkB,CACzB,aACG,OAAI,UAAU,2DACb,SAAAC,OAAC,OAAI,UAAU,cACb,UAAAC,MAAC,OAAI,UAAU,+FAA+F,EAC9GA,MAAC,KAAE,UAAU,qBAAqB,sBAAU,GAC9C,EACF,CAEJ,CAEA,SAASC,IAAM,CACbC,mBAAU,KAER5B,GAAA,EAGO,IAAM,CAEb,GACC,EAAE,EAGH0B,MAACG,GACC,SAAAH,MAACI,WAAA,CAAS,SAAUJ,MAACF,GAAA,EAAgB,EACnC,SAAAC,OAACM,EAAA,CAEC,UAAAL,MAACM,GAAM,KAAK,IAAI,QAASN,MAACT,IAAS,EAAI,QAGtCe,EAAA,CAAM,KAAK,UAAU,QAASN,MAACP,KAAkB,EAAI,QAGrDa,EAAA,CAAM,KAAK,QAAQ,QAASN,MAACN,KAAgB,EAAI,QAGjDY,EAAA,CAAM,KAAK,wBAAwB,QAASN,MAACL,KAAiB,EAAI,QAGlEW,EAAA,CAAM,KAAK,+BAA+B,QAASN,MAACJ,KAAc,EAAI,QAGtEU,EAAA,CAAM,KAAK,gCAAgC,QAASN,MAACH,KAAY,EAAI,QAGrES,EAAA,CAAM,KAAK,IAAI,QAASN,MAACT,IAAS,EAAI,GACzC,EACF,EACF,CAEJ,CC5DAgB,EAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,aACnDC,EAAM,WAAN,CACC,SAAAR,MAACC,KAAI,EACP,CACF","names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","trackedConnections","getTrackedConnectionState","name","api","key","api2","extractConnectionInformation","store","extensionConnector","options","existingConnection","newConnection","devtoolsImpl","fn","devtoolsOptions","set","get","enabled","anonymousActionType","__vite_import_meta_env__","connection","connectionInformation","isRecording","state","replace","nameOrAction","r","action","setStateFromDevtools","originalIsRecording","initialState","store2","didWarnAboutReservedActionType","originalDispatch","message","_a","parseJsonThen","stateFromDevtools","nextLiftedState","lastComputedState","devtools","stringified","parsed","createJSONStorage","getStorage","storage","parse","str2","str","newValue","toThenable","input","result","onFulfilled","_onRejected","_onFulfilled","onRejected","oldImpl","config","baseOptions","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","setItem","errorInSync","thenable","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","storageValue","deserializedStorageValue","migratedState","_a2","newOptions","newImpl","_b","migrationResult","migrated","persistImpl","persist","useSessionStore","create","code","userId","participant","existingIndex","updated","participantId","participants","isOnline","optionIds","optionId","id","results","status","isConnected","BACKEND_URL","socket","initializeSocket","io","socketId","reason","error","setupEventHandlers","event","updatedParticipants","joinSession","sessionCode","displayName","resolve","reject","payload","ack","submitSelection","restartSession","HomePage","lazy","CreateSessionPage","JoinSessionPage","SessionLobbyPage","SelectionPage","ResultsPage","LoadingFallback","jsxs","jsx","App","useEffect","BrowserRouter","Suspense","Routes","Route","ReactDOM","React"],"ignoreList":[0,1,2,3],"sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react-dom/client.js","../../../node_modules/zustand/esm/middleware.mjs","../../src/stores/sessionStore.ts","../../src/services/socketService.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","// Zustand store for session state management\n// Based on: specs/001-dinner-decider-enables/tasks.md T047\n\nimport { create } from 'zustand';\nimport { devtools, persist } from 'zustand/middleware';\nimport type { Participant, DinnerOption, Result } from '@dinner-app/shared/types';\n\ninterface SessionState {\n  // Session data\n  sessionCode: string | null;\n  participants: Participant[];\n  currentUserId: string | null;\n\n  // Selection data\n  selections: string[]; // Current user's optionIds\n  allSelections: Record<string, string[]>; // All participants' selections (after reveal)\n  overlappingOptions: DinnerOption[];\n\n  // Session status\n  sessionStatus: 'waiting' | 'selecting' | 'complete' | 'expired';\n  isConnected: boolean;\n\n  // Actions\n  setSessionCode: (code: string) => void;\n  setCurrentUserId: (userId: string) => void;\n  addParticipant: (participant: Participant) => void;\n  removeParticipant: (participantId: string) => void;\n  updateParticipants: (participants: Participant[]) => void;\n  updateParticipantOnlineStatus: (participantId: string, isOnline: boolean) => void;\n\n  // Selection actions\n  setSelections: (optionIds: string[]) => void;\n  toggleSelection: (optionId: string) => void;\n\n  // Results actions\n  setResults: (results: Result) => void;\n\n  // Status actions\n  setSessionStatus: (status: 'waiting' | 'selecting' | 'complete' | 'expired') => void;\n  setConnectionStatus: (isConnected: boolean) => void;\n\n  // Reset action\n  resetSession: () => void;\n  resetSelections: () => void;\n}\n\nconst initialState = {\n  sessionCode: null,\n  participants: [],\n  currentUserId: null,\n  selections: [],\n  allSelections: {},\n  overlappingOptions: [],\n  sessionStatus: 'waiting' as const,\n  isConnected: false,\n};\n\nexport const useSessionStore = create<SessionState>()(\n  devtools(\n    persist(\n      (set) => ({\n        ...initialState,\n\n        // Session actions\n        setSessionCode: (code) => set({ sessionCode: code }),\n\n        setCurrentUserId: (userId) => set({ currentUserId: userId }),\n\n        addParticipant: (participant) =>\n          set((state) => {\n            // Check if participant already exists, update if so\n            const existingIndex = state.participants.findIndex(\n              (p) => p.participantId === participant.participantId\n            );\n\n            if (existingIndex >= 0) {\n              const updated = [...state.participants];\n              updated[existingIndex] = { ...updated[existingIndex], ...participant };\n              return { participants: updated };\n            }\n\n            return { participants: [...state.participants, participant] };\n          }),\n\n        removeParticipant: (participantId) =>\n          set((state) => ({\n            participants: state.participants.filter((p) => p.participantId !== participantId),\n          })),\n\n        updateParticipants: (participants) => set({ participants }),\n\n        updateParticipantOnlineStatus: (participantId, isOnline) =>\n          set((state) => ({\n            participants: state.participants.map((p) =>\n              p.participantId === participantId ? { ...p, isOnline } : p\n            ),\n          })),\n\n        // Selection actions\n        setSelections: (optionIds) => set({ selections: optionIds }),\n\n        toggleSelection: (optionId) =>\n          set((state) => {\n            const isSelected = state.selections.includes(optionId);\n            return {\n              selections: isSelected\n                ? state.selections.filter((id) => id !== optionId)\n                : [...state.selections, optionId],\n            };\n          }),\n\n        // Results actions\n        setResults: (results) =>\n          set({\n            allSelections: results.allSelections,\n            overlappingOptions: results.overlappingOptions,\n            sessionStatus: 'complete',\n          }),\n\n        // Status actions\n        setSessionStatus: (status) => set({ sessionStatus: status }),\n\n        setConnectionStatus: (isConnected) => set({ isConnected }),\n\n        // Reset actions\n        resetSession: () => set(initialState),\n\n        resetSelections: () =>\n          set({\n            selections: [],\n            allSelections: {},\n            overlappingOptions: [],\n            sessionStatus: 'selecting',\n          }),\n      }),\n      {\n        name: 'dinner-session-storage',\n        // Only persist essential data - use partialPersist if available in newer versions\n        // For now, all state is persisted\n      }\n    ),\n    { name: 'DinnerSession' }\n  )\n);\n\n// Selector hooks for optimized re-renders\nexport const useSessionCode = () => useSessionStore((state) => state.sessionCode);\nexport const useParticipants = () => useSessionStore((state) => state.participants);\nexport const useCurrentUserId = () => useSessionStore((state) => state.currentUserId);\nexport const useSelections = () => useSessionStore((state) => state.selections);\nexport const useOverlappingOptions = () => useSessionStore((state) => state.overlappingOptions);\nexport const useSessionStatus = () => useSessionStore((state) => state.sessionStatus);\nexport const useConnectionStatus = () => useSessionStore((state) => state.isConnected);","// Socket.IO client service\n// Based on: specs/001-dinner-decider-enables/tasks.md T048\n\nimport { io, Socket } from 'socket.io-client';\nimport type {\n  ClientToServerEvents,\n  ServerToClientEvents,\n  SessionJoinPayload,\n  SessionJoinResponse,\n  SelectionSubmitPayload,\n  SelectionSubmitResponse,\n  SessionRestartPayload,\n  ParticipantJoinedEvent,\n  ParticipantLeftEvent,\n  ParticipantSubmittedEvent,\n  SessionResultsEvent,\n  SessionRestartedEvent,\n  SessionExpiredEvent,\n  ErrorEvent,\n} from '@dinner-app/shared/types';\nimport { useSessionStore } from '../stores/sessionStore';\n\nconst BACKEND_URL = import.meta.env.VITE_BACKEND_URL || 'http://localhost:3001';\n\n// Typed socket instance\nlet socket: Socket<ServerToClientEvents, ClientToServerEvents> | null = null;\n\n/**\n * Initialize Socket.IO client connection\n */\nexport function initializeSocket(): void {\n  if (socket?.connected) {\n    console.log('Socket already connected');\n    return;\n  }\n\n  socket = io(BACKEND_URL, {\n    reconnection: true,\n    reconnectionAttempts: 5,\n    reconnectionDelay: 1000,\n    reconnectionDelayMax: 5000,\n    timeout: 10000,\n  });\n\n  // Connection status handlers\n  socket.on('connect', () => {\n    const socketId = socket?.id;\n    console.log('Socket connected:', socketId);\n    useSessionStore.getState().setConnectionStatus(true);\n    if (socketId) {\n      useSessionStore.getState().setCurrentUserId(socketId);\n    }\n  });\n\n  socket.on('disconnect', (reason) => {\n    console.log('Socket disconnected:', reason);\n    useSessionStore.getState().setConnectionStatus(false);\n  });\n\n  socket.on('connect_error', (error) => {\n    console.error('Socket connection error:', error);\n    useSessionStore.getState().setConnectionStatus(false);\n  });\n\n  // Event handlers that update Zustand store\n  setupEventHandlers();\n}\n\n/**\n * Setup all Socket.IO event handlers\n */\nfunction setupEventHandlers(): void {\n  if (!socket) return;\n\n  // participant:joined - Another participant joined the session\n  socket.on('participant:joined', (event: ParticipantJoinedEvent) => {\n    console.log('Participant joined:', event);\n    useSessionStore.getState().addParticipant({\n      participantId: event.participantId,\n      displayName: event.displayName,\n      sessionCode: '', // Will be filled by the store\n      joinedAt: Date.now(),\n      hasSubmitted: false,\n      isHost: false,\n      isOnline: event.isOnline ?? true, // Default to true if not provided\n    });\n  });\n\n  // participant:left - A participant left the session\n  // Note: Per FR-025, participants are NOT removed on disconnect.\n  // The session stays in waiting state until they reconnect or session expires.\n  socket.on('participant:left', (event: ParticipantLeftEvent) => {\n    console.log('Participant left:', event);\n    // Update participant's online status to false\n    useSessionStore\n      .getState()\n      .updateParticipantOnlineStatus(event.participantId, event.isOnline ?? false);\n  });\n\n  // participant:submitted - A participant submitted their selections\n  socket.on('participant:submitted', (event: ParticipantSubmittedEvent) => {\n    console.log('Participant submitted:', event);\n    // Update participant's hasSubmitted status\n    const store = useSessionStore.getState();\n    const updatedParticipants = store.participants.map((p) =>\n      p.participantId === event.participantId ? { ...p, hasSubmitted: true } : p\n    );\n    store.updateParticipants(updatedParticipants);\n  });\n\n  // session:results - All participants submitted, results revealed\n  socket.on('session:results', (event: SessionResultsEvent) => {\n    console.log('Session results:', event);\n    useSessionStore.getState().setResults({\n      sessionCode: event.sessionCode,\n      overlappingOptions: event.overlappingOptions,\n      allSelections: event.allSelections,\n      hasOverlap: event.hasOverlap,\n    });\n  });\n\n  // session:restarted - Session was restarted by a participant\n  socket.on('session:restarted', (event: SessionRestartedEvent) => {\n    console.log('Session restarted:', event);\n    useSessionStore.getState().resetSelections();\n  });\n\n  // session:expired - Session expired due to inactivity\n  socket.on('session:expired', (event: SessionExpiredEvent) => {\n    console.log('Session expired:', event);\n    useSessionStore.getState().setSessionStatus('expired');\n  });\n\n  // error - Server-side error\n  socket.on('error', (event: ErrorEvent) => {\n    console.error('Socket error:', event);\n    // TODO: Display error message to user (via toast/alert)\n  });\n}\n\n/**\n * Join a session\n */\nexport function joinSession(\n  sessionCode: string,\n  displayName: string\n): Promise<SessionJoinResponse> {\n  return new Promise((resolve, reject) => {\n    if (!socket?.connected) {\n      reject(new Error('Socket not connected'));\n      return;\n    }\n\n    const payload: SessionJoinPayload = {\n      sessionCode,\n      displayName,\n    };\n\n    socket.emit('session:join', payload, (ack: SessionJoinResponse) => {\n      if (ack.success && ack.participants) {\n        // Update store with session data\n        useSessionStore.getState().setSessionCode(sessionCode);\n        useSessionStore.getState().updateParticipants(ack.participants.map(p => ({\n          ...p,\n          sessionCode,\n          joinedAt: Date.now(),\n          hasSubmitted: false,\n          isOnline: p.isOnline ?? true, // Default to true if not provided\n        })));\n        resolve(ack);\n      } else {\n        reject(new Error(ack.error || 'Failed to join session'));\n      }\n    });\n  });\n}\n\n/**\n * Submit selections\n */\nexport function submitSelection(\n  sessionCode: string,\n  optionIds: string[]\n): Promise<SelectionSubmitResponse> {\n  return new Promise((resolve, reject) => {\n    if (!socket?.connected) {\n      reject(new Error('Socket not connected'));\n      return;\n    }\n\n    const payload: SelectionSubmitPayload = {\n      sessionCode,\n      selections: optionIds,\n    };\n\n    socket.emit('selection:submit', payload, (ack: SelectionSubmitResponse) => {\n      if (ack.success) {\n        resolve(ack);\n      } else {\n        reject(new Error(ack.error || 'Failed to submit selection'));\n      }\n    });\n  });\n}\n\n/**\n * Restart session\n */\nexport function restartSession(sessionCode: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (!socket?.connected) {\n      reject(new Error('Socket not connected'));\n      return;\n    }\n\n    const payload: SessionRestartPayload = {\n      sessionCode,\n    };\n\n    socket.emit('session:restart', payload, (ack: { success?: boolean; error?: string }) => {\n      if (ack.success) {\n        resolve();\n      } else {\n        reject(new Error(ack.error || 'Failed to restart session'));\n      }\n    });\n  });\n}\n\n/**\n * Disconnect socket\n */\nexport function disconnectSocket(): void {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n    useSessionStore.getState().setConnectionStatus(false);\n  }\n}\n\n/**\n * Get socket ID\n */\nexport function getSocketId(): string | undefined {\n  return socket?.id;\n}\n\n/**\n * Check if socket is connected\n */\nexport function isSocketConnected(): boolean {\n  return socket?.connected || false;\n}","// React Router configuration and main App component\n// Based on: specs/001-dinner-decider-enables/tasks.md T050\n\nimport { Suspense, lazy, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { initializeSocket } from './services/socketService';\n\n// Lazy load route components for code splitting\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst CreateSessionPage = lazy(() => import('./pages/CreateSessionPage'));\nconst JoinSessionPage = lazy(() => import('./pages/JoinSessionPage'));\nconst SessionLobbyPage = lazy(() => import('./pages/SessionLobbyPage'));\nconst SelectionPage = lazy(() => import('./pages/SelectionPage'));\nconst ResultsPage = lazy(() => import('./pages/ResultsPage'));\n\n// Loading fallback component\nfunction LoadingFallback() {\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n      <div className=\"text-center\">\n        <div className=\"inline-block w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n        <p className=\"mt-4 text-gray-600\">Loading...</p>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    // Initialize Socket.IO connection on app mount\n    initializeSocket();\n\n    // Cleanup on unmount\n    return () => {\n      // Socket cleanup happens in socketService\n    };\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<LoadingFallback />}>\n        <Routes>\n          {/* Home page */}\n          <Route path=\"/\" element={<HomePage />} />\n\n          {/* Create new session */}\n          <Route path=\"/create\" element={<CreateSessionPage />} />\n\n          {/* Join existing session */}\n          <Route path=\"/join\" element={<JoinSessionPage />} />\n\n          {/* Session lobby (waiting room) */}\n          <Route path=\"/session/:sessionCode\" element={<SessionLobbyPage />} />\n\n          {/* Selection screen */}\n          <Route path=\"/session/:sessionCode/select\" element={<SelectionPage />} />\n\n          {/* Results screen */}\n          <Route path=\"/session/:sessionCode/results\" element={<ResultsPage />} />\n\n          {/* 404 - Redirect to home */}\n          <Route path=\"*\" element={<HomePage />} />\n        </Routes>\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// Main entry point for React application\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"file":"assets/index-p6RFt118.js"}